#*
 * Democles, Declarative Model Query Framework for Monitoring Heterogeneous Embedded Systems
 * Copyright (C) 2010-2012  Gergely Varro
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *  
 * Contributors:
 * 		Gergely Varro <gervarro@cs.bme.hu> - initial API and implementation and/or initial documentation
 *###
#if (${package})package ${package};

#end
#if ($import.getImportList().size() > 0)
#foreach ($importElement in $import.getImportList())
import ${importElement};
#end

#end
abstract class ${pattern.getBodyName()} {
	protected final ${import.getImportedName(${pattern.getFullyQualifiedClassName()})} pattern; 

	protected ${pattern.getBodyName()}(${import.getImportedName(${pattern.getFullyQualifiedClassName()})} pattern) {
		this.pattern = pattern;
	}
	
#foreach ($adornment in $adornments)##
	abstract ${import.getImportedName($pattern.getFullyQualifiedDataFrameName())} matchSingle${adornment.toString()}(${import.getImportedName($pattern.getFullyQualifiedDataFrameName())} initial);
	abstract Iterable<${import.getImportedName($pattern.getFullyQualifiedDataFrameName())}> matchAll${adornment.toString()}(${import.getImportedName($pattern.getFullyQualifiedDataFrameName())} initial);
#end
}